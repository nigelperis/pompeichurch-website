---
import Layout from "~/layouts/layout.astro";
import { Icon } from "astro-icon/components";
import { getLangFromUrl, useTranslations } from "~/i18n/utils";
import ShareLink from "~/components/ui/share-link.astro";
import { getEvent } from "~/services/events/get-event";
import NetworkImage from "~/components/ui/network-image.astro";
import { getPlaceholderImage } from "~/helpers/get-placeholder-image";
import StrapiBlocksRenderer from "~/components/ui/strapi-blocks-renderer";
import { listEvents } from "~/services/events/list-events";
import { Locale } from "~/enums/locale";
import { SITE_URL } from "~/constants/index";
import WhatsAppShare from "~/components/ui/whatsapp-share";

const { slug } = Astro.params;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const event = await getEvent(slug ?? "");

const eventUrl =
  lang === Locale.EN ? `/events/${slug}/` : `/kok/events/${slug}/`;

const baseURL = import.meta.env.PUBLIC_STRAPI_URL;

const ogUrl = new URL(eventUrl, SITE_URL).href;

const eventImage = event?.eventImage ?? {
  url: getPlaceholderImage({ text: event?.englishTitle }),
  width: 600,
  height: 400,
};
const ogImage =
  eventImage && "formats" in eventImage && eventImage.formats?.medium?.url
    ? new URL(eventImage.formats.medium.url, baseURL).toString()
    : eventImage?.url
      ? new URL(eventImage.url, baseURL).toString()
      : getPlaceholderImage({
          width: 800,
          height: 600,
          text: event?.englishTitle || "Parish Finance Committee",
        });

const { pagination: initialPagination } = await listEvents({ pageSize: 1 });
const totalEvents = initialPagination.total;

const { events: allEvents } = await listEvents({
  pageSize: totalEvents,
});

const absoluteImageURL = ogImage;
const eventIndex = allEvents.findIndex((e) => e.slug === slug);
const prevEvent = allEvents[eventIndex - 1];
const nextEvent = allEvents[eventIndex + 1];

const socialLinks = [
  { platform: "facebook", url: event?.facebookLink },
  { platform: "instagram", url: event?.instagramLink },
].filter((link) => link.url);
if (!event) {
  return Astro.redirect("/404", 302);
}
---

<Layout
  title={event?.englishTitle ?? ""}
  description={event?.shortDescriptionEn ?? event?.shortDescriptionKok ?? ""}
  image={absoluteImageURL}
  url={ogUrl}
>
  <main
    class="mx-auto max-w-screen-lg overflow-hidden bg-white text-justify font-noto-sans-kannada"
  >
    <section class="flex flex-col p-6">
      <h1
        class="border-natgeo-yellow border-l-4 pl-3 pt-[13px] text-left text-2xl font-bold lg:text-4xl"
      >
        {event?.englishTitle}
      </h1>

      <NetworkImage
        src={eventImage?.url}
        width={eventImage?.width}
        height={eventImage?.height}
        class="mx-auto mt-5 md:w-3/4"
      />

      <p class="mt-4 leading-7 text-slate-700">
        <StrapiBlocksRenderer content={event?.description ?? []} />
      </p>
      <div class="flex">
        <div class="flex w-full justify-start gap-10">
          {
            socialLinks.map(({ platform, url }) => (
              <div class="mb-1 mt-4 h-5 w-5 transition-transform duration-200 hover:scale-110">
                <a href={url} target="_blank">
                  <Icon name={platform} size={42} />
                </a>
              </div>
            ))
          }
        </div>

        <div class="mt-2 flex items-center gap-2">
          <WhatsAppShare
            client:load
            shareData={{ title: event?.englishTitle || "", url: eventUrl }}
          />

          <ShareLink
            shareData={{ title: event?.englishTitle || "", url: eventUrl }}
            class="flex h-12 items-center"
          />
        </div>
      </div>
    </section>

    {
      (prevEvent || nextEvent) && (
        <section class="mx-6 mb-8 pt-3">
          <div class="flex flex-col gap-4 sm:flex-row sm:justify-between">
            {prevEvent && (
              <a
                href={`/${lang === Locale.EN ? "" : "kok/"}events/${prevEvent.slug}`}
                rel="prev"
                class={`flex items-center gap-3 rounded-lg border border-gray-300 px-4 py-3 shadow-md transition-colors hover:border-black ${nextEvent ? "sm:w-1/2" : "w-full"}`}
              >
                <div class="shrink-0 text-3xl text-slate-900">
                  <Icon name="chevron-left" class="stroke-2" />
                </div>
                <span class="flex-1 font-roboto">
                  <div class="pb-1 text-gray-500">
                    {t("events.previous-event")}
                  </div>
                  <div class="text-left text-lg font-medium text-black">
                    {prevEvent.englishTitle}
                  </div>
                </span>
              </a>
            )}

            {nextEvent && (
              <a
                href={`/${lang === Locale.EN ? "" : "kok/"}events/${nextEvent.slug}`}
                rel="next"
                class={`flex flex-row-reverse items-center gap-3 rounded-lg border border-gray-300 px-4 py-3 text-right shadow-md transition-colors hover:border-black ${prevEvent ? "sm:w-1/2" : "w-full"}`}
              >
                <div class="shrink-0 text-3xl text-slate-900">
                  <Icon name="chevron-right" class="stroke-2" />
                </div>
                <span class="flex-1 font-roboto">
                  <div class="pb-1 text-gray-500">{t("events.next-event")}</div>
                  <div class="text-lg font-medium text-black">
                    {nextEvent.englishTitle}
                  </div>
                </span>
              </a>
            )}
          </div>
        </section>
      )
    }
  </main>
</Layout>
