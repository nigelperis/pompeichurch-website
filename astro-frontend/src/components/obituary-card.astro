---
import { cn } from "~/helpers/cn";
import NetworkImage from "./ui/network-image.astro";
import ShareLink from "./ui/share-link.astro";
import { getLangFromUrl } from "~/i18n/utils";
import { Locale } from "~/enums/locale";
import { WardNamesKok } from "~/enums/ward-names-kok";

interface Props {
  id: string;
  name: string;
  imageUrl: string;
  imageWidth: number;
  imageHeight: number;
  age: string | number;
  relationType?: string;
  relationNameEn?: string;
  relationNameKok?: string;
  ward: string;
  dateOfDeath: string;
  class?: string;
}

const {
  id,
  name,
  age,
  relationType,
  relationNameEn,
  relationNameKok,
  ward,
  dateOfDeath,
  imageWidth,
  imageHeight,
  class: className,
  imageUrl,
} = Astro.props;

const lang = getLangFromUrl(Astro.url);

const relationMapKok: Record<string, string> = {
  "H/O": "ಪತಿ",
  "W/O": "ಪತಿಣ್",
  "D/O": "ಧುವ್",
  "S/O": "ಪುತ್",
};

const relationLabel =
  lang === "kok"
    ? relationMapKok[relationType ?? ""] || "ಸಾತೀ"
    : relationType || "Relation";

const activeLabels =
  {
    [Locale.EN]: {
      age: "Age",
      ward: "Ward",
      death: "Death",
    },
    [Locale.KOK]: {
      age: "ಪ್ರಾಯ್",
      ward: "ವಾಡೊ",
      death: "ಮರಣ್",
    },
  }[lang] ?? {};

export function getWardNameKok(ward: string, lang: string): string {
  return lang === Locale.KOK ? WardNamesKok[ward as keyof typeof WardNamesKok] : ward;
}

const obituaryUrl = new URL(
  lang === Locale.EN
    ? `/obituary?id=${id.replace(/\s+/g, "-").toLowerCase()}`
    : `/kok/obituary?id=${id.replace(/\s+/g, "-").toLowerCase()}`,
  Astro.url,
).href;
---

<div
  id={id.replace(/\s+/g, "-").toLowerCase()}
  class={cn(
    "bg-white border border-gray-200 overflow-hidden w-[280px] md:w-[250px] mx-1 flex flex-col transition-transform duration-200 ease-in-out md:h-[510px]",
    className,
  )}
>
  <div class="aspect-[3/4] bg-gray-100">
    <NetworkImage
      src={imageUrl}
      alt={`Image of ${name}`}
      width={imageWidth}
      height={imageHeight}
      class="object-cover w-full h-full"
    />
  </div>

  <div class="flex flex-col justify-between p-3 h-full min-h-[180px] relative">
    <div class="space-y-1">
      <h3 class="text-xl font-bold text-slate-900 line-clamp-2">
        {name}
      </h3>

      {
        (relationNameEn || relationNameKok) && (
          <p class="line-clamp-2 md:text-base text-lg text-slate-700">
            <strong>{relationLabel}:</strong>{" "}
            {lang === "kok" ? relationNameKok : relationNameEn}
          </p>
        )
      }

      {
        age && (
          <p class="md:text-base text-lg text-slate-700">
            <strong>{activeLabels.age}:</strong> {age}
          </p>
        )
      }

      {
        ward && (
          <p class="md:text-base text-lg text-slate-700">
            <strong>{activeLabels.ward}:</strong> {getWardNameKok(ward, lang)}
          </p>
        )
      }

      {
        dateOfDeath && (
          <p class="md:text-base text-lg text-slate-700">
            <strong>{activeLabels.death}:</strong>{" "}
            {new Intl.DateTimeFormat("en-GB", {
              day: "2-digit",
              month: "2-digit",
              year: "numeric",
            })
              .format(new Date(dateOfDeath))
              .replace(/\//g, "-")}
          </p>
        )
      }
    </div>

    <div class="absolute bottom-1 right-1">
      <ShareLink
        class="px-3 py-2 text-sm"
        shareData={{
          url: obituaryUrl,
          title: `${name} - ${getWardNameKok(ward, lang)}`,
        }}
      />
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const params = new URLSearchParams(window.location.search);
    const obituaryId = params.get("id");

    if (obituaryId) {
      const targetElement = document.getElementById(obituaryId);

      if (targetElement) {
        setTimeout(() => {
          targetElement.scrollIntoView({ behavior: "smooth", block: "start" });
        }, 300);
      }
    }
  });
</script>
