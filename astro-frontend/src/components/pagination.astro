---
import { Icon } from "astro-icon/components";
import { Locale } from "~/enums/locale";
import { cn } from "~/helpers/cn";
import { getPaginationRange } from "~/helpers/get-pagination-range";
import { getLangFromUrl } from "~/i18n/utils";

const url = new URL(Astro.url);
const lang = getLangFromUrl(Astro.url);
const pathname = url.pathname.split("?")[0].replace(/\/$/, ""); 

const { currentPage, totalPages } = Astro.props as {
  currentPage: number;
  totalPages: number;
};

const paginationRange = getPaginationRange(currentPage, totalPages);

const preservedParams = url.searchParams;
const buildHref = (page: number) => {
  const query = new URLSearchParams(preservedParams);
  query.set("p", String(page));
  return `${pathname}?${query.toString()}`;
};
---

<div class="mt-10 flex items-center justify-center gap-2 text-lg lg:mt-10">
  <!-- Previous Button -->
  {
    currentPage === 1 ? (
      <span
        class="flex h-10 w-10 cursor-not-allowed items-center justify-center rounded font-bold opacity-60"
        aria-label="Previous Page (Disabled)"
        tabindex="-1"
      >
        <Icon name="chevron-left" class="stroke-2 text-2xl text-black" />
      </span>
    ) : (
      <a
        href={buildHref(currentPage - 1)}
        class="flex h-10 w-10 items-center justify-center rounded font-bold transition-all duration-200 hover:bg-gray-200"
        aria-label="Previous Page"
      >
        <Icon name="chevron-left" class="stroke-2 text-2xl text-black" />
      </a>
    )
  }

  <!-- Page Numbers -->
  {
    paginationRange.map((page) => {
      if (typeof page === "string") {
        return (
          <span class="flex h-10 w-10 items-center justify-center">...</span>
        );
      }

      return (
        <a
          href={buildHref(page)}
          class={cn(
            `flex h-10 w-10 items-center justify-center rounded transition-all duration-200 ${
              currentPage === page
                ? "bg-natgeo-yellow font-semibold text-black shadow-md"
                : "hover:bg-gray-200"
            }`,
            lang === Locale.KOK ? "pt-[6px]" : "",
          )}
          aria-label={`Page ${page}`}
        >
          {page}
        </a>
      );
    })
  }

  <!-- Next Button -->
  {
    currentPage === totalPages ? (
      <span
        class="flex h-10 w-10 cursor-not-allowed items-center justify-center rounded font-bold opacity-60"
        aria-label="Next Page (Disabled)"
        tabindex="-1"
      >
        <Icon name="chevron-right" class="stroke-2 text-2xl text-black" />
      </span>
    ) : (
      <a
        href={buildHref(currentPage + 1)}
        class="flex h-10 w-10 items-center justify-center rounded font-bold transition-all duration-200 hover:bg-gray-200"
        aria-label="Next Page"
      >
        <Icon name="chevron-right" class="stroke-2 text-2xl text-black" />
      </a>
    )
  }
</div>
