---
const languages = ["English", "ಕೊಂಕಣಿ"];
const currentLocale = Astro.currentLocale;
import { cn } from "~/helpers/cn";
import { getLangFromUrl } from "~/i18n/utils";
import { Icon } from "astro-icon/components";
import { Locale } from "~/enums/locale";

const selectedLanguage = currentLocale === Locale.KOK ? "ಕೊಂಕಣಿ" : "English";
const lang = getLangFromUrl(Astro.url);
---

<div class="relative inline-block text-left">
  <div>
    <button
      type="button"
      id="lang-button"
      class={cn(
        "inline-flex font-semibold justify-center rounded-md border border-gray-500 px-2 lg:py-1 pt-1 pb-1 mt-1 md:hover:bg-natgeo-yellow lg:pb-[0.4rem] cursor-pointer",
        lang === Locale.KOK &&
          "pt-2 font-semibold lg:pb-[0.2rem] lg:pt-[0.6rem]",
      )}
      aria-label="Click here to switch language"
    >
      {selectedLanguage}
      <Icon
        name="chevron-down"
        id="lang-arrow"
        class={cn(
          "-mr-1.5 mt-1 h-5 w-5 transition-transform duration-300 ease-in-out",
          lang === Locale.KOK && "mt-0",
        )}
      />
    </button>
  </div>
  <div
    id="lang-dropdown"
    class="absolute w-full rounded-md bg-white p-2 shadow-md"
    role="menu"
    aria-orientation="vertical"
    aria-labelledby="options-menu"
  >
    <div>
      {
        languages.map((language) => (
          <button
            type="button"
            class={cn(
              "hover:bg-natgeo-yellow w-full rounded-md py-2 text-sm transition-all cursor-pointer",
              lang === Locale.KOK ? "lg:font-[350]" : "font-normal",
              language === "ಕೊಂಕಣಿ" ? "font-noto-sans-kannada" : "font-roboto"
            )}
            aria-label="Language label"
          >
            {language}
          </button>
        ))
      }
    </div>
  </div>
</div>

<script>
  import { languageSwitcher } from "~/scripts/language-switcher";
  languageSwitcher();
</script>

<style>
  .relative:hover #lang-dropdown {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  #lang-dropdown {
    opacity: 0;
    visibility: hidden;
    transition:
      opacity 0.3s ease-in-out,
      visibility 0.3s ease-in-out;
  }

  .visible {
    opacity: 1;
    visibility: visible;
  }
</style>
