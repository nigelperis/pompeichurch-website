---
import { getLangFromUrl, useTranslations } from '~/i18n/utils';
import { cn } from '~/helpers/cn';

import { parseISO } from 'date-fns';
import { fromZonedTime } from 'date-fns-tz';

//Components

import stayTuned from '~/assets/upcoming-events/stay-tuned.png';
import stayTunedKok from '~/assets/upcoming-events/stay-tuned-kok.png';
import { listUpcomingEvents } from '~/services/upcoming-events/list-upcoming-events';
import NetworkImage from '~/components/ui/network-image.astro';
import EmblaCarousel from '~/components/ui/embla-carousel.astro';
import EmblaCarouselItem from '~/components/ui/embla-carousel-item.astro';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const today = new Date();

const upcomingEvents = await listUpcomingEvents();

const filteredEvents = upcomingEvents.filter((event) => {
	if (!event.eventEndDate) return false;
	const eventDate = parseISO(event.eventEndDate);
	return eventDate > today;
});

const eventImages =
  filteredEvents.length > 0
    ? filteredEvents.map((event) => ({
        src: event.eventImage?.url ?? stayTuned.src,
        alt: 'Upcoming Event',
        width: event.eventImage?.width,
        height: event.eventImage?.height
      }))
    : [
        {
          src: lang === 'kok' ? stayTunedKok.src : stayTuned.src,
          alt: 'Stay Tuned',
          width: 500,
          height: 200,
        },
      ];
---

<!-- This commented code is for fallback purpose  --><!-- <section
	class="mx-6 mb-4 flex flex-col lg:mx-28 lg:min-h-[70svh] lg:justify-evenly"
>
	<h1
		data-aos="fade-right"
		class={cn(
			'mb-6 inline-block border-l-4 border-natgeo-yellow pl-3 font-poppins text-3xl font-extrabold xs:text-2xl lg:text-4xl',
			{
				'font-noto-sans-kannada': lang === 'kok',
			},
		)}
	>
		{t('landing.upcoming-events')}
	</h1>
	<div class="flex flex-col justify-center gap-4 md:flex-row md:gap-6">
		{
			filteredEvents.length > 0 ? (
				filteredEvents.map((event) => (
					<Image
						src={event.eventImg}
						alt="Upcoming Event"
						class={event.class}
					/>
				))
			) : (
				<Image
					src={lang === 'kok' ? stayTunedKok : stayTuned}
					alt="Stay Tuned"
					class="w-full rounded-sm object-cover md:w-1/3"
				/>
			)
		}
	</div>
</section> -->
<section
	class="mx-6 mb-4 mt-3 flex flex-col lg:mx-28 lg:min-h-[70svh] lg:justify-evenly"
>
	<h1
		data-aos="fade-right"
		class={cn(
			'mb-6 inline-block border-l-4 border-natgeo-yellow pl-3 font-poppins text-3xl font-extrabold xs:text-2xl lg:text-4xl',
			{ 'font-noto-sans-kannada': lang === 'kok' },
		)}
	>
		{t('landing.upcoming-events')}
	</h1>

	<!-- Mobile UI -->
	{
		filteredEvents.length > 1 ? (
			<div class="-mx-[1.5rem] block md:hidden">
				<EmblaCarousel showArrows={true}>
					{filteredEvents.map((event) => (
						<EmblaCarouselItem>
							<NetworkImage
								src={event.eventImage?.url ?? stayTuned.src}
								alt="Upcoming Event"
								class="w-full"
								width={event.eventImage?.width ?? 500}
								height={event.eventImage?.height ?? 200}
							/>
						</EmblaCarouselItem>
					))}
				</EmblaCarousel>
			</div>
		) : (
			<div class="block md:hidden">
				<NetworkImage
					src={eventImages[0]?.src ?? stayTuned.src}
					alt={eventImages[0]?.alt ?? 'Default Alt Text'}
					class="w-full"
					width={eventImages[0]?.width}
					height={eventImages[0]?.height}
				/>
			</div>
		)
	}

	<!-- Web UI -->
	<div class="hidden justify-center gap-4 md:flex">
		{
			eventImages.map((image) => (
				<NetworkImage
					src={image.src ?? stayTuned.src}
					alt={image.alt ?? 'Default Alt Text'}
					class="rounded-sm md:w-1/4"
					width={500}
					height={300}
				/>
			))
		}
	</div>
</section>
