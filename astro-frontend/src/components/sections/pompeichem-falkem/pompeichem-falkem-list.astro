---
import MagazineCard from "~/components/magazine-card.astro";
import type { PompeichemFalkem } from "~/models/pompeichem-falkem";
import { getPlaceholderImage } from "~/helpers/get-placeholder-image";
import { getLangFromUrl } from "~/i18n/utils";
import { getMagazineDisplayTitle, isSpecialEdition } from "~/helpers/magazine";

const { magazines, isFirstPage = false, latestMagazineId } = Astro.props as {
  magazines: PompeichemFalkem[];
  isFirstPage?: boolean;
  latestMagazineId?: number;
};

const lang = getLangFromUrl(Astro.url);

const magazinesOrdered = (() => {
  const list = [...magazines];
  if (list.length <= 1) return list;

  let firstIndex = 0;
  if (typeof latestMagazineId === "number") {
    const idx = list.findIndex((m) => m.id === latestMagazineId);
    if (idx !== -1) firstIndex = idx;
  }

  const first = list[firstIndex];
  const rest = list.filter((_, i) => i !== firstIndex);

  const specials: PompeichemFalkem[] = [];
  const normals: PompeichemFalkem[] = [];

  for (const m of rest) {
    if (isSpecialEdition(m)) specials.push(m);
    else normals.push(m);
  }

  return [first, ...specials, ...normals];
})();
---

<div class="grid grid-cols-1 gap-10 lg:gap-x-20 lg:gap-y-20 md:grid-cols-2 lg:grid-cols-3 mt-5 mb-5">
  {
    magazinesOrdered.map((magazine, index) => {
      const isLatest =
        typeof latestMagazineId === "number"
          ? magazine.id === latestMagazineId
          : isFirstPage && index === 0;
      const isSpecial = isSpecialEdition(magazine);
      const displayTitle = getMagazineDisplayTitle(magazine, lang);

      return (
        <div class="h-full">
          <MagazineCard
            title={displayTitle}
            imageUrl={
              magazine.coverImage?.url
                ? new URL(
                    magazine.coverImage.url,
                    import.meta.env.PUBLIC_STRAPI_URL,
                  ).toString()
                : getPlaceholderImage({
                    text: displayTitle,
                    width: magazine.coverImage?.width ?? 400,
                    height: magazine.coverImage?.height ?? 500,
                  })
            }
            imageWidth={magazine.coverImage?.width ?? 400}
            imageHeight={magazine.coverImage?.height ?? 500}
            fileUrl={
              magazine.pdfFile?.url
                ? new URL(
                    magazine.pdfFile.url,
                    import.meta.env.PUBLIC_STRAPI_URL,
                  ).toString()
                : null
            }
            dateOfPublish={magazine.dateOfPublish}
            latest={isLatest}
            specialEdition={isSpecial}
          />
        </div>
      );
    })
  }
</div>