---
import { format } from "date-fns-tz";
import { getLangFromUrl } from "~/i18n/utils";
import { getPlaceholderImage } from "~/helpers/get-placeholder-image";
import type { Obituary } from "~/models/obituary";
import ObituaryCard from "~/components/ObituaryCard";
import { Locale } from "~/enums/locale";

const { obituaries } = Astro.props as { obituaries: Obituary[] };

const lang = getLangFromUrl(Astro.url);
const obituaryDataFormatted = obituaries
  ?.map((obituary) => {
    const rawDate = obituary.dateOfDeath
      ? new Date(obituary.dateOfDeath)
      : new Date(0);

    // Consistent image handling with standardized dimensions
    const imageUrl = obituary.image?.url
      ? new URL(
          obituary.image.url,
          import.meta.env.PUBLIC_STRAPI_URL,
        ).toString()
      : getPlaceholderImage({
          text: obituary.englishName,
          width: 340,
          height: 400,
        });

    return {
      ...obituary,
      imageUrl,
      formattedDate: obituary.dateOfDeath
        ? format(rawDate, "dd MMMM, yyyy")
        : "Unknown Date",
      dateSort: rawDate,
    };
  })
  .sort((a, b) => b.dateSort.getTime() - a.dateSort.getTime()); // latest first
---

<div
  class="grid-cols-1 mx-auto grid w-full gap-x-20 gap-y-10 pt-4 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3"
>
  {
    obituaryDataFormatted?.map((item) => (
      <ObituaryCard
        client:load
        id={item.englishName}
        name={lang === Locale.EN ? item.englishName : item.konkaniName}
        imageUrl={item.imageUrl}
        imageWidth={340}
        imageHeight={400}
        age={item.age}
        ward={item.ward}
        dateOfDeath={item.formattedDate}
        relationType={item.relationType}
        relationNameEn={item.relationNameEn}
        relationNameKok={item.relationNameKok}
        slug={item.slug}
        funeralDetails={item.funeralDetails}
        funeralDetailsKok={item.funeralDetailsKok}
        youtubeLink={item.youtubeLink}
        funeralDetailsUpdatedAt={item.funeralDetailsUpdatedAt}
        autoFlip={true}
      />
    ))
  }
</div>
